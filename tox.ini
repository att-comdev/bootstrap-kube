[tox]
envlist = py35

[testenv]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
setenv=
  PYTHONWARNING=all
commands=
  pytest \
    {posargs}

[testenv:docs]
whitelist_externals=rm
commands =
    rm -rf docs/build
    python setup.py build_sphinx {posargs}

[testenv:fmt]
deps = yapf
commands =
    yapf -ir {toxinidir}/promenade

[testenv:freeze]
deps = -r{toxinidir}/requirements-direct.txt
recreate = True
whitelist_externals=sh
commands=
    sh -c "pip freeze | grep -v '^promenade' > {toxinidir}/requirements-frozen.txt"

[testenv:gate-lint]
deps =
    jsonschema
whitelist_externals = sh
# Note(mark-burnett): This requires `sudo apt install shellcheck`
commands =
    sh -c "set -e; for manifest in $(find {toxinidir}/tools/g2/manifests -type f | sort); do echo Checking $manifest; python -m jsonschema {toxinidir}/tools/g2/manifest-schema.json -i $manifest; done"
    sh -c "shellcheck -s bash -e SC2029 {toxinidir}/tools/*gate*.sh {toxinidir}/tools/g2/stages/* {toxinidir}/tools/g2/lib/*"

[testenv:lint]
deps =
    yapf
    flake8
commands =
    yapf -rd {toxinidir}/promenade
    flake8 {toxinidir}/promenade
