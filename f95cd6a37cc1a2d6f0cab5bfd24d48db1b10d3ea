{
  "comments": [
    {
      "key": {
        "uuid": "8af8742e_a2b4ab8c",
        "filename": "promenade/config.py",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-04-23T22:02:39Z",
      "side": 1,
      "message": "Could do return next(self.iterate(*args, **kwargs)) and catch the StopIteration if applicable.",
      "range": {
        "startLine": 104,
        "startChar": 8,
        "endLine": 105,
        "endChar": 22
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2880dca_2ec0eb1c",
        "filename": "promenade/config.py",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1011672
      },
      "writtenOn": "2018-04-27T13:08:19Z",
      "side": 1,
      "message": "so you\u0027re suggesting:\n\ntry:\n  return next(self.iterate(*args, **kwargs))\nexcept StopIeration:\n  return None\n\n\nI\u0027m not sure I really prefer this, though I understand that this is what the for loop is doing under the hood.",
      "parentUuid": "8af8742e_a2b4ab8c",
      "range": {
        "startLine": 104,
        "startChar": 8,
        "endLine": 105,
        "endChar": 22
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c43efbf_7a5c3342",
        "filename": "promenade/exceptions.py",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-04-23T22:02:39Z",
      "side": 1,
      "message": "Missing status",
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "117b32a9_902f4e24",
        "filename": "promenade/exceptions.py",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1011672
      },
      "writtenOn": "2018-04-27T13:08:19Z",
      "side": 1,
      "message": "True, it\u0027s in the base class on line 231 -- This kind of error should not actually happen inside the API, so I left it at a 500.\n\nI don\u0027t know that it needs to be pushed down into each subclass here, but I guess I don\u0027t have strong feelings.",
      "parentUuid": "6c43efbf_7a5c3342",
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae88c396_bcd797ab",
        "filename": "promenade/exceptions.py",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-04-27T18:49:32Z",
      "side": 1,
      "message": "Oh didn\u0027t see that. I previously screwed things up by not specifying the exact status. It helps from a self-documenting POV.",
      "parentUuid": "117b32a9_902f4e24",
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e01923b9_1f0aca35",
        "filename": "promenade/exceptions.py",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1011672
      },
      "writtenOn": "2018-04-27T19:31:13Z",
      "side": 1,
      "message": "Totally fair (and more clear to duplicate I think).\n\nI did repeat both the status code and note for extra clarity.\n\nHopefully this code gets moved into a separate certificate management system \"soonish\".",
      "parentUuid": "ae88c396_bcd797ab",
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5aab38fc_f6e6de28",
        "filename": "promenade/generator.py",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-04-23T22:02:39Z",
      "side": 1,
      "message": "Would be more robust to do:\n\n    found_schemas \u003d [x.get(\u0027schema\u0027) for x in docs]\n    if sorted(found_schemas) \u003d\u003d sorted(schemas):\n        ...\n\nTo avoid having 2 PrivateKey documents but 0 PublicKey documents for example.",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 39
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "875a3d55_e67b607e",
        "filename": "promenade/generator.py",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1011672
      },
      "writtenOn": "2018-04-27T14:06:43Z",
      "side": 1,
      "message": "Forgot to respond to this one, sorry.\n\nI assumed here that there wouldn\u0027t be multiple of a given kind for one name, which should generally hold, though this would guard against that, I agree.",
      "parentUuid": "5aab38fc_f6e6de28",
      "range": {
        "startLine": 93,
        "startChar": 12,
        "endLine": 93,
        "endChar": 39
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40d90429_21b580a8",
        "filename": "promenade/pki.py",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-04-23T22:02:39Z",
      "side": 1,
      "message": "Default mutable types should be avoided: http://docs.python-guide.org/en/latest/writing/gotchas/#mutable-default-arguments",
      "range": {
        "startLine": 63,
        "startChar": 36,
        "endLine": 64,
        "endChar": 39
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9738978_0a19dd56",
        "filename": "promenade/pki.py",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1011672
      },
      "writtenOn": "2018-04-27T13:08:19Z",
      "side": 1,
      "message": "Sure, this is fair.  I\u0027ll update these uses, though I think these functions don\u0027t (and probably wouldn\u0027t ever) do modifications.",
      "parentUuid": "40d90429_21b580a8",
      "range": {
        "startLine": 63,
        "startChar": 36,
        "endLine": 64,
        "endChar": 39
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e62e9fb7_8f95c5bc",
        "filename": "tools/g2/lib/promenade.sh",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1011942
      },
      "writtenOn": "2018-04-23T22:02:39Z",
      "side": 1,
      "message": "As an aside is this port number actually used in prod? I just used it randomly for dev",
      "range": {
        "startLine": 23,
        "startChar": 84,
        "endLine": 23,
        "endChar": 88
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18f20a1f_a780c537",
        "filename": "tools/g2/lib/promenade.sh",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1011672
      },
      "writtenOn": "2018-04-27T13:08:19Z",
      "side": 1,
      "message": "Yes, this number has propagated to prod.",
      "parentUuid": "e62e9fb7_8f95c5bc",
      "range": {
        "startLine": 23,
        "startChar": 84,
        "endLine": 23,
        "endChar": 88
      },
      "revId": "f95cd6a37cc1a2d6f0cab5bfd24d48db1b10d3ea",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}